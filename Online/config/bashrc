# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

source /etc/profile.d/modules.sh 

export TERM="xterm-256color"
export LANG=en_US.utf8

if [[ -n $SSH_CLIENT ]]; then
  pax11publish -r
fi
# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi


if [ ! -e /environment ] ; then
  running_singularity=
else
  running_singularity="\#singularity"
fi


# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-256color)
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]${running_singularity}\$ '
    ;;
xterm)
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]${running_singularity}\$ '
    ;;
xterm-color)
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]${running_singularity}\$ '
    ;;
*)
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    ;;
esac

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

#export GREP_OPTIONS='--color=auto'
export FC=gfortran
export EDITOR=vim
export GCC_COLORS=1

if [ -n "$DISPLAY" ]; then
   export BROWSER=firefox
else
   export BROWSER=links
fi


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $ONLINE_DIR/config/bash_aliases ]; then
  source $ONLINE_DIR/config/bash_aliases
fi

#[ -f ~/.fzf.bash ] && source ~/.fzf.bash

#if [[ -z "${TMUX}" ]] ; then

# --------------------------------------------------------------------
# python
export PATH=$HOME/.local/bin:$PATH
export PYTHONPATH=$HOME/.local/lib:$PYTHONPATH
export LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH
export MANPATH=$HOME/.local/man:$HOME/.local/share/man:$MANPATH

# LaTeX 
export TEXMFHOME=$HOME/.texmf
export TEXINPUTS=.:$TEXINPUTS:$HOME/.texmf/:

# Get Git branch of current directory
git_branch () {
   if git rev-parse --git-dir >/dev/null 2>&1
   then echo -e "" git:\($(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')\)
   else
      echo ""
   fi
}

# Set a specific color for the status of the Git repo
git_color() {
   local STATUS=`git status 2>&1`
   if [[ "$STATUS" == *'Not a git repository'* ]]
   then echo "" # nothing
   else
      if [[ "$STATUS" != *'working directory clean'* ]]
      then echo -e '\033[0;31m' # red if need to commit
      else
         if [[ "$STATUS" == *'Your branch is ahead'* ]]
         then echo -e '\033[0;33m' # yellow if need to push
         else
            echo -e '\033[0;32m' # else green
         fi
      fi
   fi
}

set -o emacs
